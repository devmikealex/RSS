@use 'sass:math';

$color-primary: #f1cdb3;
$color-primary-light: #fddcc4;

$color-dark-s: #cdcdcd;
$color-dark-m: #B2B2B2;
$color-dark-l: #545454;
$color-dark-xl: #4C4C4C;
$color-dark-3xl: #292929;

$color-light-s: #FAFAFA;
$color-light-l: #f6f6f6;
$color-light-xl: #FFFFFF;

@mixin font-alt {
    font-family: Arial, Helvetica, sans-serif;
}

// https://itnext.io/writing-media-queries-with-sass-mixins-3ea591ea3ea4
@mixin for-size($size) {
    @if $size==sm {
        @media screen and (max-width: 321px) {
            @content;
        }
    }

    @else if $size==md {
        @media screen and (max-width: 769px) {
            @content;
        }
    }

    @else if $size==lg {
        @media screen and (max-width: 1025px) {
            @content;
        }
    }
}


@mixin interpolate($properties, $min-value, $max-value, $min-screen: 321px, $max-screen: 768px) {
    & {
        @each $property in $properties {
            #{$property}: $min-value;
        }

        @media screen and (min-width: $min-screen) {
            @each $property in $properties {
                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);
            }
        }

        @media screen and (min-width: $max-screen) {
            @each $property in $properties {
                #{$property}: $max-value;
            }
        }
    }
}

@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {
    $a: math.div(($max-value - $min-value), ($max-screen - $min-screen));
    $b: $min-value - $a * $min-screen;

    $sign: "+";

    @if ($b < 0) {
        $sign: "-";
        $b: abs($b);
    }

    @return calc(#{$a*100}vw #{$sign} #{$b});
}